#include <iostream>
using namespace std;

// Function to partition the array
int partition(int arr[], int low, int high) {
    int pivot = arr[high]; // Choosing the last element as pivot
    int i = low - 1; // Index for smaller element

    for (int j = low; j < high; j++) {
        if (arr[j] < pivot) { // If element is smaller than pivot
            i++;
            swap(arr[i], arr[j]); // Swap smaller element to the left
        }
    }

    swap(arr[i + 1], arr[high]); // Swap pivot to correct position
    return (i + 1); // Return pivot index
}

// Function to perform Quick Sort
void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pivotIndex = partition(arr, low, high); // Partitioning index

        quickSort(arr, low, pivotIndex - 1); // Sort left part
        quickSort(arr, pivotIndex + 1, high); // Sort right part
    }
}

// Function to print the array
void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
    cout << endl;
}

int main() {
    int n;

    // Taking input for array size
    cout << "Enter the number of elements: ";
    cin >> n;

    int arr[n];

    // Taking input for array elements
    cout << "Enter the elements: ";
    for (int i = 0; i < n; i++)
        cin >> arr[i];

    // Sorting the array using Quick Sort
    quickSort(arr, 0, n - 1);

    // Printing the sorted array
    cout << "Sorted array: ";
    printArray(arr, n);

    return 0;
}
