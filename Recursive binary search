#include <iostream>
#include <algorithm> // For sorting
using namespace std;

// Recursive binary search function
int binarySearch(int arr[], int left, int right, int target) {
    if (left > right) {
        return -1; // Element not found
    }

    int mid = left + (right - left) / 2;

    // If the element is found at the middle
    if (arr[mid] == target) {
        return mid;
    }
    // If the element is smaller, search the left subarray
    else if (arr[mid] > target) {
        return binarySearch(arr, left, mid - 1, target);
    }
    // If the element is larger, search the right subarray
    else {
        return binarySearch(arr, mid + 1, right, target);
    }
}

int main() {
    int n;
    
    // Taking array size input
    cout << "Enter the number of elements: ";
    cin >> n;

    int arr[n];

    // Taking array elements input
    cout << "Enter " << n << " sorted numbers: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    int target;
    cout << "Enter the number to search: ";
    cin >> target;

    // Sorting the array to ensure binary search works correctly
    sort(arr, arr + n);

    int result = binarySearch(arr, 0, n - 1, target);

    if (result != -1) {
        cout << "Element found at index " << result << endl;
    } else {
        cout << "Element not found in the array." << endl;
    }

    return 0;
}
